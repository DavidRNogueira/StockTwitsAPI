{"ast":null,"code":"var _jsxFileName = \"/Users/davidnogueira/Desktop/StockTwitsChallenge /src/main/resources/static/src/Components/SelectSymbols/SelectSymbols.tsx\";\nimport React, { useState } from \"react\";\nimport { SelectSymbolsDiv, SymbolInput, AddSymbolBtn, SymbolTagsDiv, TagDiv, SymbolName, TagsHeader, InputDiv, FormError } from \"./SelectSymbolsStyles\";\nimport axios from \"axios\";\n\nconst SelectSymbols = () => {\n  const [currentSymbol, setCurrentSymbol] = useState(\"\");\n  const [allSymbols, setAllSymbols] = useState([\"ASDF\"]);\n  const [compErrors, setCompErrors] = useState([]);\n\n  const handleInputChange = event => {\n    const newValue = event.currentTarget.value.toUpperCase();\n\n    if (newValue.length > 5) {\n      return;\n    }\n\n    setCurrentSymbol(newValue);\n  };\n\n  const handleDeleteTag = deletedSymbol => {\n    const newArray = allSymbols.filter(symbol => symbol !== deletedSymbol);\n    setAllSymbols(newArray);\n  };\n\n  const handleAddNewSymbol = async () => {\n    setCompErrors([]);\n\n    if (allSymbols.includes(currentSymbol)) {\n      setCompErrors([...compErrors, \"repeat\"]);\n      return;\n    }\n\n    if (currentSymbol.length > 2 && currentSymbol.length < 6) {\n      setAllSymbols([...allSymbols, currentSymbol]);\n      const response = await axios.get(`/get-tweets-by-symbol?symbol=${currentSymbol}`);\n\n      if (response.status === 200) {\n        console.log(response.data);\n      }\n    }\n\n    setCurrentSymbol(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(SelectSymbolsDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, allSymbols.length > 0 && /*#__PURE__*/React.createElement(TagsHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 42\n    }\n  }, \"Tags You Have Selected:\"), /*#__PURE__*/React.createElement(SymbolTagsDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, allSymbols.length > 0 && allSymbols.map(symbol => {\n    return /*#__PURE__*/React.createElement(TagDiv, {\n      href: \"\",\n      onClick: event => {\n        event.preventDefault();\n        handleDeleteTag(symbol);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(SymbolName, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }\n    }, symbol));\n  })), /*#__PURE__*/React.createElement(InputDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SymbolInput, {\n    type: \"text\",\n    value: currentSymbol,\n    onChange: event => {\n      handleInputChange(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(AddSymbolBtn, {\n    href: \"\",\n    onClick: event => {\n      event.preventDefault();\n      handleAddNewSymbol();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Add Symbol\")), compErrors.includes(\"repeat\") && /*#__PURE__*/React.createElement(FormError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 50\n    }\n  }, \"You already added that symbol.\"));\n};\n\nexport default SelectSymbols;","map":{"version":3,"sources":["/Users/davidnogueira/Desktop/StockTwitsChallenge /src/main/resources/static/src/Components/SelectSymbols/SelectSymbols.tsx"],"names":["React","useState","SelectSymbolsDiv","SymbolInput","AddSymbolBtn","SymbolTagsDiv","TagDiv","SymbolName","TagsHeader","InputDiv","FormError","axios","SelectSymbols","currentSymbol","setCurrentSymbol","allSymbols","setAllSymbols","compErrors","setCompErrors","handleInputChange","event","newValue","currentTarget","value","toUpperCase","length","handleDeleteTag","deletedSymbol","newArray","filter","symbol","handleAddNewSymbol","includes","response","get","status","console","log","data","map","preventDefault"],"mappings":"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","sourcesContent":["import React , {FC, useState} from \"react\";\nimport { \n    SelectSymbolsDiv,\n    SymbolInput, \n    AddSymbolBtn, \n    SymbolTagsDiv, \n    TagDiv, \n    SymbolName, \n    TagsHeader, \n    InputDiv, \n    FormError \n} from \"./SelectSymbolsStyles\";\nimport axios from \"axios\"\n\nconst SelectSymbols:FC = ():JSX.Element => {\n    const [currentSymbol , setCurrentSymbol] = useState<string>(\"\");\n    const [allSymbols , setAllSymbols] = useState<string[]>([\"ASDF\"]);\n    const [compErrors , setCompErrors] = useState<string[]>([]);\n   \n    const handleInputChange = (event: React.FormEvent<HTMLInputElement>) => {\n            const newValue = event.currentTarget.value.toUpperCase();\n\n            if (newValue.length > 5){\n                return;\n            }\n\n            setCurrentSymbol(newValue);\n\n    }\n\n    const handleDeleteTag = (deletedSymbol: string) => {\n        const newArray = allSymbols.filter(symbol => symbol !== deletedSymbol)\n        setAllSymbols(newArray);\n    }\n\n    const handleAddNewSymbol = async () => {\n        setCompErrors([]);\n        if (allSymbols.includes(currentSymbol)){\n            setCompErrors([...compErrors , \"repeat\"])\n            return;\n        }\n        if (currentSymbol.length > 2 && currentSymbol.length < 6){\n            setAllSymbols([...allSymbols , currentSymbol ])\n            const response = await axios.get(`/get-tweets-by-symbol?symbol=${currentSymbol}`)\n                if (response.status === 200){\n                    console.log(response.data)\n                }\n        }\n        setCurrentSymbol(\"\")\n    }\n\n    return (\n        <SelectSymbolsDiv>\n            {\n                allSymbols.length > 0 && <TagsHeader>Tags You Have Selected:</TagsHeader>\n            }\n            <SymbolTagsDiv>\n                {\n                    allSymbols.length > 0 &&\n                    allSymbols.map(symbol =>{\n                        return(\n                            <TagDiv href=\"\" onClick={(event:React.MouseEvent<HTMLAnchorElement>) => {event.preventDefault(); handleDeleteTag(symbol);}}>\n                                <SymbolName>{symbol}</SymbolName>\n                            </TagDiv>\n                        )\n                    })\n                }\n            </SymbolTagsDiv>\n            <InputDiv>\n                <SymbolInput type =\"text\" value={currentSymbol} onChange={(event:React.FormEvent<HTMLInputElement>) => {handleInputChange(event)}}/>\n                <AddSymbolBtn href=\"\" onClick={(event:React.MouseEvent<HTMLAnchorElement>) => {event.preventDefault(); handleAddNewSymbol();}}>\n                    Add Symbol\n                </AddSymbolBtn>\n            </InputDiv>\n            {\n                compErrors.includes(\"repeat\") && <FormError>You already added that symbol.</FormError>\n            }\n        </SelectSymbolsDiv>\n    )\n}\n\nexport default SelectSymbols;"]},"metadata":{},"sourceType":"module"}