{"ast":null,"code":"var _jsxFileName = \"/Users/davidnogueira/Desktop/StockTwitsChallenge /src/main/resources/static/src/Components/SelectSymbols/SelectSymbols.tsx\";\nimport React, { useState, useContext } from \"react\";\nimport { SelectSymbolsDiv, SymbolInput, AddSymbolBtn, SymbolTagsDiv, TagDiv, SymbolName, TagsHeader, InputDiv, FormError, TweetCounterHeader, TweetCounterList, TweetCounterItem, TweetCounterDiv } from \"./SelectSymbolsStyles\";\nimport axios from \"axios\";\nimport { Context } from \"../../App\";\n\nconst SelectSymbols = () => {\n  const context = useContext(Context);\n  const [currentSymbol, setCurrentSymbol] = useState(\"\");\n  const [allSymbols, setAllSymbols] = useState([\"ASDF\", \"GOOG\"]);\n  const [compErrors, setCompErrors] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [tweetCounter, setTweetCounter] = useState([{\n    symbol: \"ASDF\",\n    mentions: 2\n  }, {\n    symbol: \"GOOG\",\n    mentions: 5\n  }]);\n\n  const handleInputChange = event => {\n    const newValue = event.currentTarget.value.toUpperCase();\n\n    if (newValue.length > 5) {\n      return;\n    }\n\n    setCurrentSymbol(newValue);\n  };\n\n  const handleDeleteTag = deletedSymbol => {\n    const newSymbols = allSymbols.filter(symbol => symbol !== deletedSymbol);\n    setAllSymbols(newSymbols);\n    const newTweets = tweets.filter(tweet => tweet.symbol !== deletedSymbol);\n    context.dispatch({\n      type: \"UPDATE_TWEETS\",\n      payload: [...newTweets]\n    });\n    setTweets([...newTweets]);\n    const newTweetCounter = tweetCounter.filter(counter => counter.symbol !== deletedSymbol);\n    console.log(newTweetCounter);\n    setTweetCounter(newTweetCounter);\n  };\n\n  const handleAddNewSymbol = async () => {\n    setCompErrors([]);\n\n    if (allSymbols.includes(currentSymbol)) {\n      setCompErrors([...compErrors, \"repeat\"]);\n      return;\n    }\n\n    if (currentSymbol.length > 2 && currentSymbol.length < 6) {\n      setAllSymbols([...allSymbols, currentSymbol]);\n      const response = await axios.get(`/get-tweets-by-symbol?symbol=${currentSymbol}`);\n\n      if (response.status === 200) {\n        const newTweets = [...tweets, ...response.data];\n        context.dispatch({\n          type: \"UPDATE_TWEETS\",\n          payload: newTweets\n        });\n        setTweets([...newTweets]);\n        setTweetCounter([...tweetCounter, {\n          symbol: currentSymbol,\n          mentions: response.data.length\n        }]);\n      }\n    }\n\n    setCurrentSymbol(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(SelectSymbolsDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, allSymbols.length > 0 && /*#__PURE__*/React.createElement(TagsHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 42\n    }\n  }, \"Tags You Have Selected:\"), /*#__PURE__*/React.createElement(SymbolTagsDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, allSymbols.length > 0 && allSymbols.map(symbol => {\n    return /*#__PURE__*/React.createElement(TagDiv, {\n      href: \"\",\n      onClick: event => {\n        event.preventDefault();\n        handleDeleteTag(symbol);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(SymbolName, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, symbol));\n  })), /*#__PURE__*/React.createElement(InputDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SymbolInput, {\n    type: \"text\",\n    value: currentSymbol,\n    onChange: event => {\n      handleInputChange(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(AddSymbolBtn, {\n    href: \"\",\n    onClick: event => {\n      event.preventDefault();\n      handleAddNewSymbol();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Add Symbol\")), compErrors.includes(\"repeat\") && /*#__PURE__*/React.createElement(FormError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 50\n    }\n  }, \"You already added that symbol.\"), /*#__PURE__*/React.createElement(TweetCounterDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TweetCounterHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Mentions\"), /*#__PURE__*/React.createElement(TweetCounterList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, tweetCounter !== [] && tweetCounter.map(counter => {\n    return /*#__PURE__*/React.createElement(TweetCounterItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 36\n      }\n    }, counter.symbol, \" : \", counter.mentions, \" / 10\");\n  }))));\n};\n\nexport default SelectSymbols;","map":{"version":3,"sources":["/Users/davidnogueira/Desktop/StockTwitsChallenge /src/main/resources/static/src/Components/SelectSymbols/SelectSymbols.tsx"],"names":["React","useState","useContext","SelectSymbolsDiv","SymbolInput","AddSymbolBtn","SymbolTagsDiv","TagDiv","SymbolName","TagsHeader","InputDiv","FormError","TweetCounterHeader","TweetCounterList","TweetCounterItem","TweetCounterDiv","axios","Context","SelectSymbols","context","currentSymbol","setCurrentSymbol","allSymbols","setAllSymbols","compErrors","setCompErrors","tweets","setTweets","tweetCounter","setTweetCounter","symbol","mentions","handleInputChange","event","newValue","currentTarget","value","toUpperCase","length","handleDeleteTag","deletedSymbol","newSymbols","filter","newTweets","tweet","dispatch","type","payload","newTweetCounter","counter","console","log","handleAddNewSymbol","includes","response","get","status","data","map","preventDefault"],"mappings":"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","sourcesContent":["import React , {FC, useState, useContext} from \"react\";\nimport { \n    SelectSymbolsDiv,\n    SymbolInput, \n    AddSymbolBtn, \n    SymbolTagsDiv, \n    TagDiv, \n    SymbolName, \n    TagsHeader, \n    InputDiv, \n    FormError, \n    TweetCounterHeader,\n    TweetCounterList,\n    TweetCounterItem,\n    TweetCounterDiv\n} from \"./SelectSymbolsStyles\";\nimport axios from \"axios\"\nimport { Context } from \"../../App\";\nimport { ITweet, ITweetCounter } from \"../../interfaces\";\n\nconst SelectSymbols:FC = ():JSX.Element => {\n\t\tconst context = useContext(Context);\n\n    const [currentSymbol , setCurrentSymbol] = useState<string>(\"\");\n    const [allSymbols , setAllSymbols] = useState<string[]>([\"ASDF\" , \"GOOG\"]);\n    const [compErrors , setCompErrors] = useState<string[]>([]);\n\tconst [tweets , setTweets] = useState<ITweet[]>([]);\n\tconst [tweetCounter , setTweetCounter] = useState<ITweetCounter[]>([{symbol: \"ASDF\" , mentions:2} , {symbol:\"GOOG\" , mentions: 5}]);\n   \n    const handleInputChange = (event: React.FormEvent<HTMLInputElement>) => {\n            const newValue = event.currentTarget.value.toUpperCase();\n\n            if (newValue.length > 5){\n                return;\n            }\n\n            setCurrentSymbol(newValue);\n\n    }\n\n    const handleDeleteTag = (deletedSymbol: string) => {\n        const newSymbols = allSymbols.filter(symbol => symbol !== deletedSymbol)\n\t\tsetAllSymbols(newSymbols);\n\n\t\tconst newTweets = tweets.filter(tweet => tweet.symbol !== deletedSymbol);\n\t\t\tcontext.dispatch({\n\t\t\t\ttype: \"UPDATE_TWEETS\" ,\n\t\t\t\tpayload : [...newTweets]\n\t\t\t})\n        setTweets([...newTweets])\n                \n        const newTweetCounter = tweetCounter.filter(counter => counter.symbol !== deletedSymbol);\n        console.log(newTweetCounter);\n        setTweetCounter(newTweetCounter);\n    }\n\n    const handleAddNewSymbol = async () => {\n        setCompErrors([]);\n        if (allSymbols.includes(currentSymbol)){\n            setCompErrors([...compErrors , \"repeat\"])\n            return;\n        }\n        if (currentSymbol.length > 2 && currentSymbol.length < 6){\n            setAllSymbols([...allSymbols , currentSymbol ])\n            const response = await axios.get(`/get-tweets-by-symbol?symbol=${currentSymbol}`)\n              if (response.status === 200){\n\t\t\t\tconst newTweets = [...tweets , ...response.data];\n\t\t\t\tcontext.dispatch({\n\t\t\t\t    type: \"UPDATE_TWEETS\" , \n\t\t\t\t    payload : newTweets\n\t\t\t\t})\n                setTweets([...newTweets]);\n                setTweetCounter([...tweetCounter , {symbol : currentSymbol , mentions : response.data.length}])\n              }\n        }\n        setCurrentSymbol(\"\")\n    }\n\n    return (\n        <SelectSymbolsDiv>\n            {\n                allSymbols.length > 0 && <TagsHeader>Tags You Have Selected:</TagsHeader>\n            }\n            <SymbolTagsDiv>\n                {\n                    allSymbols.length > 0 &&\n                    allSymbols.map(symbol =>{\n                        return(\n                            <TagDiv href=\"\" onClick={(event:React.MouseEvent<HTMLAnchorElement>) => {event.preventDefault(); handleDeleteTag(symbol);}}>\n                                <SymbolName>{symbol}</SymbolName>\n                            </TagDiv>\n                        )\n                    })\n                }\n            </SymbolTagsDiv>\n            <InputDiv>\n                <SymbolInput type =\"text\" value={currentSymbol} onChange={(event:React.FormEvent<HTMLInputElement>) => {handleInputChange(event)}}/>\n                <AddSymbolBtn href=\"\" onClick={(event:React.MouseEvent<HTMLAnchorElement>) => {event.preventDefault(); handleAddNewSymbol();}}>\n                    Add Symbol\n                </AddSymbolBtn>\n            </InputDiv>\n            {\n                compErrors.includes(\"repeat\") && <FormError>You already added that symbol.</FormError>\n            }\n\n            <TweetCounterDiv>\n                <TweetCounterHeader>Mentions</TweetCounterHeader>\n                <TweetCounterList>\n                    {\n                        tweetCounter !== [] &&\n                        tweetCounter.map(counter => {\n                            return <TweetCounterItem>{counter.symbol} : {counter.mentions} / 10</TweetCounterItem>\n                        })\n                    }\n                </TweetCounterList>\n            </TweetCounterDiv>\n        </SelectSymbolsDiv>\n    )\n}\n\nexport default SelectSymbols;"]},"metadata":{},"sourceType":"module"}